name: 'Multi-Platform Docker Build'
description: 'publish '
inputs:
  image-name:
    description: 'Image name under ghcr.io/$GITHUB_REPOSITORY, if not ${GITHUB_REPOSITORY#*/}'
    default: ""
    required: true
  tags:
    description: 'Tag name(s), space-separated, if not $GITHUB_SHA'
    default: ""
    required: true
  docker-file:
    description: 'Path of Dockerfile, if not "Dockerfile"'
    default: Dockerfile
    required: true
  path:
    description: 'Path to build, if not "."'
    default: "."
    required: true
  token:
    description: 'GitHub Token for pushing'
    required: true
  author:
    description: 'Name for authors label, if not committer.name'
    default: ""
    required: true
  email:
    description: 'Email for authors label, if not committer.email'
    default: ""
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build "author" argument
      env:
        GIT_AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
        GIT_AUTHOR_EMAIL: ${{ github.event.head_commit.author.email }}
      run: |
        name="$2"
        if [ -z "$name" ]; then
          name="$GIT_AUTHOR_NAME"
        fi
        email="$1"
        if [ -z "$email" ]; then
          email="$GIT_AUTHOR_EMAIL"
        elif [[ "$email" = *@users.noreply.github.com ]]; then
          email="$GIT_AUTHOR_EMAIL"
        fi
        echo "author=$name <$email>"
      shell: bash
    - name: Build "imageName" argument
      run: |
        imageName="${{inputs.image-name}}"
        if [ -z "$imageName" ]; then
          imageName="${GITHUB_REPOSITORY#*/}"
        fi        
        echo "imageName=${imageName}" >> $GITHUB_ENV
      shell: bash
    - name: Build "tag" argument
      run: |
        words=()
        tags="$1"
        if [ -z "$tags" ]; then
          tags="$GITHUB_SHA"
        fi
        for t in $tags; do
          words+=("--tag" "ghcr.io/$GITHUB_REPOSITORY/${{ env.imageName }}:$t")
        done
        echo "tags=${words[@]}" >> $GITHUB_ENV
      shell: bash
    - name: Build "email" argument
      run: |
        words=()
        tags="$1"
        if [ -z "$tags" ]; then
          tags="$GITHUB_SHA"
        fi
        for t in $tags; do
          words+=("--tag" "ghcr.io/$GITHUB_REPOSITORY/${{ env.imageName }}:$t")
        done
        echo "tags=${words[@]}" >> $GITHUB_ENV
      shell: bash
    - name: Login
      run: echo "${{ inputs.token }}" | docker login ghcr.io --username dummy --password-stdin
      shell: bash
    - name: Build the Docker image
      env:
        GIT_AUTHOR_NAME: ${{ github.event.head_commit.author.name }}
        GIT_AUTHOR_EMAIL: ${{ github.event.head_commit.author.email }}
      run: docker buildx build ${{ inputs.path }}
        --file ${{ inputs.docker-file }}
        --label org.opencontainers.image.created="$(date +'%Y-%m-%dT%H:%M:%S%z')"
        --label org.opencontainers.image.authors="$GIT_AUTHOR_NAME <tierleben-development@vkb.de>"
        --label org.opencontainers.image.source="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
        --label org.opencontainers.image.revision="$GITHUB_SHA"
        --label org.opencontainers.image.url="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
        ${{ env.tags }}
        --platform=linux/amd64,linux/arm64
        --push
      shell: bash
